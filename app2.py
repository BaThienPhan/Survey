import streamlit as st
import pandas as pd
import os
import qrcode
from io import BytesIO
from PIL import Image
from streamlit_autorefresh import st_autorefresh

# C·∫•u h√¨nh trang
st.set_page_config(page_title="Kh·∫£o s√°t k·ªπ nƒÉng t·ª´ ch·ªëi",
                   page_icon="üß†", layout="centered")

# T·ª± ƒë·ªông l√†m m·ªõi sau m·ªói 5 gi√¢y
st_autorefresh(interval=5000, key="refresh")

# File d·ªØ li·ªáu
VOTE_FILE = "votes.csv"

questions = [
    "1. Em c·∫£m th·∫•y kh√≥ x·ª≠ khi t·ª´ ch·ªëi l·ªùi r·ªß r√™ c·ªßa b·∫°n b√®?",
    "2. Em t·ª´ng l√†m ƒëi·ªÅu m√¨nh kh√¥ng mu·ªën ch·ªâ v√¨ s·ª£ b·∫°n gi·∫≠n?",
    "3. Em nghƒ© n√≥i ‚ÄúKh√¥ng‚Äù s·∫Ω khi·∫øn ng∆∞·ªùi kh√°c gh√©t em?",
    "4. Em bi·∫øt ph√¢n bi·ªát ƒë√∫ng ‚Äì sai trong nh·ªØng t√¨nh hu·ªëng b·∫°n b√® r·ªß r√™?",
    "5. Em bi·∫øt c√°ch t·ª´ ch·ªëi l·ªãch s·ª± nh∆∞ng v·∫´n gi·ªØ ƒë∆∞·ª£c m·ªëi quan h·ªá?",
    "6. Em t·ª´ng g·∫∑p t√¨nh hu·ªëng khi·∫øn em h·ªëi h·∫≠n v√¨ ƒë√£ kh√¥ng n√≥i ‚ÄúKh√¥ng‚Äù k·ªãp th·ªùi?",
    "7. Em d·ªÖ b·ªã √°p l·ª±c khi ng∆∞·ªùi kh√°c n√†i n·ªâ nhi·ªÅu l·∫ßn, d√π em kh√¥ng mu·ªën?",
    "8. Em c√≥ th·ªÉ n√≥i ‚ÄúKh√¥ng‚Äù khi b·ªã ng∆∞·ªùi l·∫° tr√™n m·∫°ng xin th√¥ng tin c√° nh√¢n?",
    "9. Em t·ª´ng ch·ª©ng ki·∫øn m·ªôt b·∫°n kh√°c b·ªã √©p bu·ªôc m√† kh√¥ng d√°m t·ª´ ch·ªëi?",
    "10. Em mu·ªën h·ªçc c√°ch n√≥i ‚ÄúKh√¥ng‚Äù m·∫°nh m·∫Ω, r√µ r√†ng nh∆∞ng kh√¥ng l√†m t·ªïn th∆∞∆°ng ng∆∞·ªùi kh√°c?"
]

# Kh·ªüi t·∫°o file n·∫øu ch∆∞a c√≥
if not os.path.exists(VOTE_FILE):
    df_init = pd.DataFrame(columns=[f"Q{i+1}" for i in range(len(questions))])
    df_init.to_csv(VOTE_FILE, index=False)

st.title("üß† Kh·∫£o s√°t: K·ªπ nƒÉng n√≥i 'Kh√¥ng'")

# QR Code truy c·∫≠p
col1, col2, col3 = st.columns([1, 2, 1])
with col2:
    url = "https://surveyssss.streamlit.app/"
    qr = qrcode.make(url)
    buf = BytesIO()
    qr.save(buf)
    buf.seek(0)
    st.image(Image.open(buf),
             caption="üì± Qu√©t m√£ QR ƒë·ªÉ truy c·∫≠p kh·∫£o s√°t", width=180)

st.divider()

# FORM ph·∫£n h·ªìi
if "submitted" not in st.session_state:
    st.session_state.submitted = False

if not st.session_state.submitted:
    with st.form("survey_form"):
        st.header("üìù Tr·∫£ l·ªùi kh·∫£o s√°t")
        st.write("H√£y ch·ªçn ‚úÖ C√≥ ho·∫∑c ‚ùå Kh√¥ng cho t·ª´ng c√¢u h·ªèi:")
        user_votes = []
        for i, q in enumerate(questions):
            vote = st.radio(q, ["‚úÖ C√≥", "‚ùå Kh√¥ng"], key=f"q{i}")
            user_votes.append("Yes" if vote == "‚úÖ C√≥" else "No")
        submitted = st.form_submit_button("üì§ G·ª≠i ph·∫£n h·ªìi")
        if submitted:
            df = pd.read_csv(VOTE_FILE)
            new_row = pd.DataFrame([user_votes], columns=df.columns)
            df = pd.concat([df, new_row], ignore_index=True)
            df.to_csv(VOTE_FILE, index=False)
            st.success("üéâ C·∫£m ∆°n b·∫°n ƒë√£ ho√†n th√†nh kh·∫£o s√°t!")
            st.session_state.submitted = True
else:
    st.info("‚úÖ B·∫°n ƒë√£ g·ª≠i ph·∫£n h·ªìi trong phi√™n hi·ªán t·∫°i.")

st.divider()
st.subheader("üìä K·∫øt qu·∫£ kh·∫£o s√°t")

# Hi·ªÉn th·ªã th·ªëng k√™
try:
    df = pd.read_csv(VOTE_FILE)
    if len(df) > 0:
        for i, q in enumerate(questions):
            yes_count = (df[f"Q{i+1}"] == "Yes").sum()
            no_count = (df[f"Q{i+1}"] == "No").sum()
            total = yes_count + no_count

            if total > 0:
                yes_percent = round(yes_count / total * 100, 1)
                no_percent = round(no_count / total * 100, 1)
                st.markdown(f"**{q}**")
                st.progress(yes_percent / 100, text=f"‚úÖ C√≥: {yes_percent}%")
                st.progress(no_percent / 100, text=f"‚ùå Kh√¥ng: {no_percent}%")
            else:
                st.info(f"Ch∆∞a c√≥ ph·∫£n h·ªìi cho: {q}")
    else:
        st.info("‚è≥ Ch∆∞a c√≥ d·ªØ li·ªáu kh·∫£o s√°t.")
except Exception as e:
    st.error(f"L·ªói khi ƒë·ªçc d·ªØ li·ªáu: {e}")

st.divider()
st.subheader("‚öôÔ∏è Qu·∫£n l√Ω d·ªØ li·ªáu")

# N√∫t x√≥a d·ªØ li·ªáu c√≥ m·∫≠t kh·∫©u
with st.expander("üîê X√≥a to√†n b·ªô d·ªØ li·ªáu kh·∫£o s√°t"):
    password = st.text_input("Nh·∫≠p m·∫≠t kh·∫©u ƒë·ªÉ x√°c nh·∫≠n x√≥a", type="password")
    if st.button("üóëÔ∏è X√≥a d·ªØ li·ªáu"):
        if password == "112233":
            os.remove(VOTE_FILE)
            df_init = pd.DataFrame(
                columns=[f"Q{i+1}" for i in range(len(questions))])
            df_init.to_csv(VOTE_FILE, index=False)
            st.success("‚úÖ ƒê√£ x√≥a to√†n b·ªô d·ªØ li·ªáu kh·∫£o s√°t.")
            st.session_state.submitted = False
        else:
            st.error("‚ùå M·∫≠t kh·∫©u kh√¥ng ch√≠nh x√°c.")
